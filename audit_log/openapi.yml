openapi: 3.0.0
info:
  description: This API provides audit info.
  version: "1.0.0"
  title: Audit API
  contact:
    email: rferguson55@my.bcit.com
paths:
  /existing_customer:
    get:
      summary: gets an existing customer order from history
      operationId: app.get_existing_customer_order
      description: gets an existing customer order from the event store
      parameters:
        - name: index
          in: query
          description: Gets an existing customer order from event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description:  successfully returned an existing customer order event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/ExistingCustomerOrder'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /dropship:
    get:
      summary: gets a dropship order from history
      operationId: app.get_dropship_order
      description: gets a dropship order from the event store
      parameters:
        - name: index
          in: query
          description: Gets a dropship order from event store
          schema:
            type: integer
            example: 100
      responses:
        '200':
          description:  successfully returned a dropship order event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/DropShipOrder'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        
components:
  schemas:
    ExistingCustomerOrder:
      type: object
      required:
        - order_id
        - customer_id
        - tire
        - quantity
        - timestamp
      properties:
        order_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        customer_id:
          type: string
          example: MA13542
        tire:
          $ref: '#/components/schemas/Tire'
        quantity:
          type: integer
        timestamp:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'

    DropShipOrder:
      required:
        - order_id
        - address
        - tire
        - quantity
        - timestamp
      properties:
        order_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        address:
          $ref: '#/components/schemas/Address'
        tire:
          $ref: '#/components/schemas/Tire'
        quantity:
          type: integer
        timestamp:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
      
    Tire:
      required:
        - tire_sku
        - tire_size
      properties:
        tire_sku:
          type: string
          example: 285-7516AMPCM2
        tire_size:
          type: string
          format: tire-size
          example: 285/75R16
          
    Address:
      required:
        - name
        - address
        - city
        - state/province
        - country
        - postal/zipcode
        
      properties:
        name:
          type: string
          example: John Doe
        address:
          type: string
          example: 999 Barker Street
        unit_no:
          type: string
          example: 45-9087
        city:
          type: string
          example: Winnipeg
        state/province:
          type: string
          example: Manitoba
        country:
          type: string
          example: Canada
        postal/zipcode:
          type: string
          example: N4B8X9
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/